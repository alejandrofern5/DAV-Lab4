|nunchukDriver
clock => clock.IN1
SDApin <> I2C:UUT.sda
SCLpin << I2C:UUT.scl
stick_x[0] << <GND>
stick_x[1] << <GND>
stick_x[2] << <GND>
stick_x[3] << <GND>
stick_x[4] << <GND>
stick_x[5] << <GND>
stick_x[6] << <GND>
stick_x[7] << <GND>
stick_y[0] << <GND>
stick_y[1] << <GND>
stick_y[2] << <GND>
stick_y[3] << <GND>
stick_y[4] << <GND>
stick_y[5] << <GND>
stick_y[6] << <GND>
stick_y[7] << <GND>
accel_x[0] << <GND>
accel_x[1] << <GND>
accel_x[2] << <GND>
accel_x[3] << <GND>
accel_x[4] << <GND>
accel_x[5] << <GND>
accel_x[6] << <GND>
accel_x[7] << <GND>
accel_x[8] << <GND>
accel_x[9] << <GND>
accel_y[0] << <GND>
accel_y[1] << <GND>
accel_y[2] << <GND>
accel_y[3] << <GND>
accel_y[4] << <GND>
accel_y[5] << <GND>
accel_y[6] << <GND>
accel_y[7] << <GND>
accel_y[8] << <GND>
accel_y[9] << <GND>
accel_z[0] << <GND>
accel_z[1] << <GND>
accel_z[2] << <GND>
accel_z[3] << <GND>
accel_z[4] << <GND>
accel_z[5] << <GND>
accel_z[6] << <GND>
accel_z[7] << <GND>
accel_z[8] << <GND>
accel_z[9] << <GND>
z << <GND>
c << <GND>
addr[0] << addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[1] << addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[2] << addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[3] << addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[4] << addr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[5] << addr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[6] << addr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[7] << addr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => I2C:UUT.rst
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => start.ENA
reset => write.ENA
reset => numBytes[0].ENA
reset => numBytes[1].ENA
reset => numBytes[2].ENA
reset => dataIn[0][0].ENA
reset => dataIn[0][1].ENA
reset => dataIn[0][2].ENA
reset => dataIn[0][3].ENA
reset => dataIn[0][4].ENA
reset => dataIn[0][5].ENA
reset => dataIn[0][6].ENA
reset => dataIn[0][7].ENA
reset => addr[0]~reg0.ENA
reset => addr[1]~reg0.ENA
reset => addr[2]~reg0.ENA
reset => addr[3]~reg0.ENA
reset => addr[4]~reg0.ENA
reset => addr[5]~reg0.ENA
reset => addr[6]~reg0.ENA
reset => addr[7]~reg0.ENA


|nunchukDriver|clockDiv:clock_400kHz
clock => newClock~reg0.CLK
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => counter[3].CLK
clock => counter[4].CLK
clock => counter[5].CLK
clock => counter[6].CLK
clock => counter[7].CLK
clock => counter[8].CLK
clock => counter[9].CLK
clock => counter[10].CLK
clock => counter[11].CLK
clock => counter[12].CLK
clock => counter[13].CLK
clock => counter[14].CLK
clock => counter[15].CLK
clock => counter[16].CLK
clock => counter[17].CLK
clock => counter[18].CLK
clock => counter[19].CLK
clock => counter[20].CLK
clock => counter[21].CLK
clock => counter[22].CLK
clock => counter[23].CLK
clock => counter[24].CLK
clock => counter[25].CLK
clock => counter[26].CLK
clock => counter[27].CLK
clock => counter[28].CLK
clock => counter[29].CLK
clock => counter[30].CLK
clock => counter[31].CLK
newClock <= newClock~reg0.DB_MAX_OUTPUT_PORT_TYPE


|nunchukDriver|I2C:UUT
clk => byte_cnt[0].CLK
clk => byte_cnt[1].CLK
clk => byte_cnt[2].CLK
clk => delayCounter[0].CLK
clk => delayCounter[1].CLK
clk => delayCounter[2].CLK
clk => delayCounter[3].CLK
clk => delayCounter[4].CLK
clk => delayCounter[5].CLK
clk => delayCounter[6].CLK
clk => delayCounter[7].CLK
clk => dataOut[0][0]~reg0.CLK
clk => dataOut[0][1]~reg0.CLK
clk => dataOut[0][2]~reg0.CLK
clk => dataOut[0][3]~reg0.CLK
clk => dataOut[0][4]~reg0.CLK
clk => dataOut[0][5]~reg0.CLK
clk => dataOut[0][6]~reg0.CLK
clk => dataOut[0][7]~reg0.CLK
clk => dataOut[1][0]~reg0.CLK
clk => dataOut[1][1]~reg0.CLK
clk => dataOut[1][2]~reg0.CLK
clk => dataOut[1][3]~reg0.CLK
clk => dataOut[1][4]~reg0.CLK
clk => dataOut[1][5]~reg0.CLK
clk => dataOut[1][6]~reg0.CLK
clk => dataOut[1][7]~reg0.CLK
clk => dataOut[2][0]~reg0.CLK
clk => dataOut[2][1]~reg0.CLK
clk => dataOut[2][2]~reg0.CLK
clk => dataOut[2][3]~reg0.CLK
clk => dataOut[2][4]~reg0.CLK
clk => dataOut[2][5]~reg0.CLK
clk => dataOut[2][6]~reg0.CLK
clk => dataOut[2][7]~reg0.CLK
clk => dataOut[3][0]~reg0.CLK
clk => dataOut[3][1]~reg0.CLK
clk => dataOut[3][2]~reg0.CLK
clk => dataOut[3][3]~reg0.CLK
clk => dataOut[3][4]~reg0.CLK
clk => dataOut[3][5]~reg0.CLK
clk => dataOut[3][6]~reg0.CLK
clk => dataOut[3][7]~reg0.CLK
clk => dataOut[4][0]~reg0.CLK
clk => dataOut[4][1]~reg0.CLK
clk => dataOut[4][2]~reg0.CLK
clk => dataOut[4][3]~reg0.CLK
clk => dataOut[4][4]~reg0.CLK
clk => dataOut[4][5]~reg0.CLK
clk => dataOut[4][6]~reg0.CLK
clk => dataOut[4][7]~reg0.CLK
clk => dataOut[5][0]~reg0.CLK
clk => dataOut[5][1]~reg0.CLK
clk => dataOut[5][2]~reg0.CLK
clk => dataOut[5][3]~reg0.CLK
clk => dataOut[5][4]~reg0.CLK
clk => dataOut[5][5]~reg0.CLK
clk => dataOut[5][6]~reg0.CLK
clk => dataOut[5][7]~reg0.CLK
clk => byteOut[0].CLK
clk => byteOut[1].CLK
clk => byteOut[2].CLK
clk => byteOut[3].CLK
clk => byteOut[4].CLK
clk => byteOut[5].CLK
clk => byteOut[6].CLK
clk => byteOut[7].CLK
clk => notAcked.CLK
clk => scl~reg0.CLK
clk => in.CLK
clk => done_sending.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => subbit_cnt[0].CLK
clk => subbit_cnt[1].CLK
clk => regAddr[0].CLK
clk => regAddr[1].CLK
clk => regAddr[2].CLK
clk => regAddr[3].CLK
clk => regAddr[4].CLK
clk => regAddr[5].CLK
clk => regAddr[6].CLK
clk => regAddr[7].CLK
clk => dataIn[0][0].CLK
clk => dataIn[0][1].CLK
clk => dataIn[0][2].CLK
clk => dataIn[0][3].CLK
clk => dataIn[0][4].CLK
clk => dataIn[0][5].CLK
clk => dataIn[0][6].CLK
clk => dataIn[0][7].CLK
clk => dataIn[1][0].CLK
clk => dataIn[1][1].CLK
clk => dataIn[1][2].CLK
clk => dataIn[1][3].CLK
clk => dataIn[1][4].CLK
clk => dataIn[1][5].CLK
clk => dataIn[1][6].CLK
clk => dataIn[1][7].CLK
clk => dataIn[2][0].CLK
clk => dataIn[2][1].CLK
clk => dataIn[2][2].CLK
clk => dataIn[2][3].CLK
clk => dataIn[2][4].CLK
clk => dataIn[2][5].CLK
clk => dataIn[2][6].CLK
clk => dataIn[2][7].CLK
clk => dataIn[3][0].CLK
clk => dataIn[3][1].CLK
clk => dataIn[3][2].CLK
clk => dataIn[3][3].CLK
clk => dataIn[3][4].CLK
clk => dataIn[3][5].CLK
clk => dataIn[3][6].CLK
clk => dataIn[3][7].CLK
clk => dataIn[4][0].CLK
clk => dataIn[4][1].CLK
clk => dataIn[4][2].CLK
clk => dataIn[4][3].CLK
clk => dataIn[4][4].CLK
clk => dataIn[4][5].CLK
clk => dataIn[4][6].CLK
clk => dataIn[4][7].CLK
clk => dataIn[5][0].CLK
clk => dataIn[5][1].CLK
clk => dataIn[5][2].CLK
clk => dataIn[5][3].CLK
clk => dataIn[5][4].CLK
clk => dataIn[5][5].CLK
clk => dataIn[5][6].CLK
clk => dataIn[5][7].CLK
clk => numBytes[0].CLK
clk => numBytes[1].CLK
clk => numBytes[2].CLK
clk => numBytes[3].CLK
clk => deviceAddr[0].CLK
clk => deviceAddr[1].CLK
clk => deviceAddr[2].CLK
clk => deviceAddr[3].CLK
clk => deviceAddr[4].CLK
clk => deviceAddr[5].CLK
clk => deviceAddr[6].CLK
clk => write.CLK
clk => state~1.DATAIN
rst => always1.IN0
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
rst => dataOut.OUTPUTSELECT
driverDisable => always1.IN1
deviceAddr_d[0] => deviceAddr.DATAB
deviceAddr_d[1] => deviceAddr.DATAB
deviceAddr_d[2] => deviceAddr.DATAB
deviceAddr_d[3] => deviceAddr.DATAB
deviceAddr_d[4] => deviceAddr.DATAB
deviceAddr_d[5] => deviceAddr.DATAB
deviceAddr_d[6] => deviceAddr.DATAB
regAddr_d[0] => regAddr.DATAB
regAddr_d[1] => regAddr.DATAB
regAddr_d[2] => regAddr.DATAB
regAddr_d[3] => regAddr.DATAB
regAddr_d[4] => regAddr.DATAB
regAddr_d[5] => regAddr.DATAB
regAddr_d[6] => regAddr.DATAB
regAddr_d[7] => regAddr.DATAB
numBytes_d[0] => numBytes.DATAB
numBytes_d[1] => numBytes.DATAB
numBytes_d[2] => numBytes.DATAB
dataIn_d[0][0] => dataIn.DATAB
dataIn_d[0][1] => dataIn.DATAB
dataIn_d[0][2] => dataIn.DATAB
dataIn_d[0][3] => dataIn.DATAB
dataIn_d[0][4] => dataIn.DATAB
dataIn_d[0][5] => dataIn.DATAB
dataIn_d[0][6] => dataIn.DATAB
dataIn_d[0][7] => dataIn.DATAB
dataIn_d[1][0] => dataIn.DATAB
dataIn_d[1][1] => dataIn.DATAB
dataIn_d[1][2] => dataIn.DATAB
dataIn_d[1][3] => dataIn.DATAB
dataIn_d[1][4] => dataIn.DATAB
dataIn_d[1][5] => dataIn.DATAB
dataIn_d[1][6] => dataIn.DATAB
dataIn_d[1][7] => dataIn.DATAB
dataIn_d[2][0] => dataIn.DATAB
dataIn_d[2][1] => dataIn.DATAB
dataIn_d[2][2] => dataIn.DATAB
dataIn_d[2][3] => dataIn.DATAB
dataIn_d[2][4] => dataIn.DATAB
dataIn_d[2][5] => dataIn.DATAB
dataIn_d[2][6] => dataIn.DATAB
dataIn_d[2][7] => dataIn.DATAB
dataIn_d[3][0] => dataIn.DATAB
dataIn_d[3][1] => dataIn.DATAB
dataIn_d[3][2] => dataIn.DATAB
dataIn_d[3][3] => dataIn.DATAB
dataIn_d[3][4] => dataIn.DATAB
dataIn_d[3][5] => dataIn.DATAB
dataIn_d[3][6] => dataIn.DATAB
dataIn_d[3][7] => dataIn.DATAB
dataIn_d[4][0] => dataIn.DATAB
dataIn_d[4][1] => dataIn.DATAB
dataIn_d[4][2] => dataIn.DATAB
dataIn_d[4][3] => dataIn.DATAB
dataIn_d[4][4] => dataIn.DATAB
dataIn_d[4][5] => dataIn.DATAB
dataIn_d[4][6] => dataIn.DATAB
dataIn_d[4][7] => dataIn.DATAB
dataIn_d[5][0] => dataIn.DATAB
dataIn_d[5][1] => dataIn.DATAB
dataIn_d[5][2] => dataIn.DATAB
dataIn_d[5][3] => dataIn.DATAB
dataIn_d[5][4] => dataIn.DATAB
dataIn_d[5][5] => dataIn.DATAB
dataIn_d[5][6] => dataIn.DATAB
dataIn_d[5][7] => dataIn.DATAB
dataOut[0][0] <= dataOut[0][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[0][1] <= dataOut[0][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[0][2] <= dataOut[0][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[0][3] <= dataOut[0][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[0][4] <= dataOut[0][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[0][5] <= dataOut[0][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[0][6] <= dataOut[0][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[0][7] <= dataOut[0][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1][0] <= dataOut[1][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1][1] <= dataOut[1][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1][2] <= dataOut[1][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1][3] <= dataOut[1][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1][4] <= dataOut[1][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1][5] <= dataOut[1][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1][6] <= dataOut[1][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1][7] <= dataOut[1][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2][0] <= dataOut[2][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2][1] <= dataOut[2][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2][2] <= dataOut[2][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2][3] <= dataOut[2][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2][4] <= dataOut[2][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2][5] <= dataOut[2][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2][6] <= dataOut[2][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2][7] <= dataOut[2][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3][0] <= dataOut[3][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3][1] <= dataOut[3][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3][2] <= dataOut[3][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3][3] <= dataOut[3][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3][4] <= dataOut[3][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3][5] <= dataOut[3][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3][6] <= dataOut[3][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3][7] <= dataOut[3][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4][0] <= dataOut[4][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4][1] <= dataOut[4][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4][2] <= dataOut[4][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4][3] <= dataOut[4][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4][4] <= dataOut[4][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4][5] <= dataOut[4][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4][6] <= dataOut[4][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4][7] <= dataOut[4][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5][0] <= dataOut[5][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5][1] <= dataOut[5][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5][2] <= dataOut[5][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5][3] <= dataOut[5][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5][4] <= dataOut[5][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5][5] <= dataOut[5][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5][6] <= dataOut[5][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5][7] <= dataOut[5][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_d => write.DATAB
start => Selector11.IN4
start => next_state.DATAB
start => Selector16.IN1
start => next_state.DATAB
done <= done.DB_MAX_OUTPUT_PORT_TYPE
scl <= scl~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> IOBuffer:sdaBuff.SDA


|nunchukDriver|I2C:UUT|IOBuffer:sdaBuff
in => SDA.DATAIN
out <= out.DB_MAX_OUTPUT_PORT_TYPE
we => out.OUTPUTSELECT
we => SDA.OE
SDA <> SDA


